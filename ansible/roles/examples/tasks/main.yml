---

- name: Copy default project with selector
  copy: src="defaultwithselector.yaml" dest="."
  tags: projectselector

- name: Create default project with selector
  action: command oc create -f defaultwithselector.yaml -n default
  tags: projectselector

- name: Change default node selector
  lineinfile: 'dest=/etc/origin/master/master-config.yaml state=present regexp="  projectRequestTemplate:" line="  projectRequestTemplate: "default/project-request""'
  tags: projectselector

- name: Add techpreview file in master config
  copy: src="tech-preview.js" dest="."
  tags: techpreview

- name: Add techpreview file in master config
  lineinfile: "dest=/etc/origin/master/master-config.yaml state=present insertafter='    requestTimeoutSeconds: 0' line='  extensionScripts:'"
  tags: techpreview

- name: Add techpreview file in master config
  lineinfile: "dest=/etc/origin/master/master-config.yaml state=present insertafter='  extensionScripts:' line='    - /root/tech-preview.js'"
  tags: techpreview

- name: Restart master
  service: name=atomic-openshift-master state=restarted
  tags: projectselector

- name: Copy offine sample
  copy: src="{{ item }}" dest="/usr/share/openshift/examples/quickstart-templates/"
  with_fileglob:
    - ./1*.json
  tags: examples

- name: Create offine sample
  action: command oc create -f "{{ item }}" -n openshift
  with_fileglob:
    - /usr/share/openshift/examples/quickstart-templates/1*.json
  tags: examples

# get the token
# curl http://gitlab.example.com/api/v3/session --data 'login=root&password=weareawesome' | grep -o '"private_token":".*' | cut -d'"' -f 4
# curl http://gitlab.example.com/api/v3/session --data 'login=root&password=weareawesome' | grep -o 'private_token.*' | cut -b 17-36
- name: Git Lab get root token
  shell: "curl http://gitlab.example.com/api/v3/session --data 'login=root&password=weareawesome' | grep -o 'private_token.*' | cut -b 17-36 > token.txt"
  tags: examples

#use the token to create user
#curl --header "PRIVATE-TOKEN: `cat token.txt`" "http://gitlab.example.com/api/v3/users" --data "email=gabriel@gab.com&password=weareawesome&username=gabriel&name=Gabriel Bechara"
- name: Git Lab create user
  shell: 'curl --header "PRIVATE-TOKEN: `cat token.txt`" "http://gitlab.example.com/api/v3/users" --data "email=gabriel@gab.com&password=weareawesome&username=gabriel&name=Gabriel Bechara"'
  tags: examples

#use the token to create project
#curl --header "PRIVATE-TOKEN: `cat token.txt`" "http://gitlab.example.com/api/v3/projects/user/2" --data "name=ticket-monster&public=true&import_url=https://github.com/gbechara/osedevops-ticket-monster.git"
- name: Git Lab root password create ticket-monster project and import sample
  shell: 'curl --header "PRIVATE-TOKEN: `cat token.txt`" "http://gitlab.example.com/api/v3/projects/user/2" --data "name=ticket-monster&public=true&import_url=https://github.com/gbechara/osedevops-ticket-monster.git"'
  tags: examples

- name: Git Lab root password create cake-php project and import sample
  shell: 'curl --header "PRIVATE-TOKEN: `cat token.txt`" "http://gitlab.example.com/api/v3/projects/user/2" --data "name=cake-php&public=true&import_url=https://github.com/openshift/cakephp-ex.git"'
  tags: examples

- name: Add webhook to cake-php project
  shell: 'curl --request POST --header "PRIVATE-TOKEN: `cat token.txt`" "http://gitlab.example.com/api/v3/projects/2/hooks" --data "url=https://ose-master.example.com:8443/oapi/v1/namespaces/development/buildconfigs/cakephp-offline/webhooks/secret101/generic&enable_ssl_verification=false"'
  tags: examples

- name: Git Lab root password create nodejs project and import sample
  shell: 'curl --header "PRIVATE-TOKEN: `cat token.txt`" "http://gitlab.example.com/api/v3/projects/user/2" --data "name=nodejs-example&public=true&import_url=https://github.com/openshift/nodejs-ex.git"'
  tags: examples

- name: Create a dev project
  action: command oc new-project development
  tags: examples

- name: Grant edit access to developer
  action: command oc policy add-role-to-user edit dev1
  tags: examples

- name: Grant edit access to tester
  action: command oc policy add-role-to-user edit test1
  tags: examples

- name: Create a test project
  action: command oc new-project testing
  tags: examples

- name: Grant edit access to tester
  action: command oc policy add-role-to-user edit test1
  tags: examples

- name: Grant user dev1 admin role on project developement
  action: command oc policy add-role-to-user admin dev1 -n development
  tags: examples

- name: Copy pipeline build
  copy: src="pipeline.yaml" dest="."
  tags: pipeline

- name: Create pipeline build in developement
  action: command oc create -f pipeline.yaml -n development
  tags: pipeline

- name: Create jenkins app for pipelines in
  action: command oc new-app jenkins-ephemeral -p JENKINS_PASSWORD=password -n development
  tags: pipeline

- name: Enable the test project to pull development images
  action: command oc policy add-role-to-group system:image-puller system:serviceaccounts:testing -n development
  tags: examples

- name: Enable the production project to pull test images
  action: command oc policy add-role-to-group system:image-puller system:serviceaccounts:production -n development
  tags: examples

- name: Enable the production project to pull development images
  action: command oc policy add-role-to-group system:image-puller system:serviceaccounts:production -n testing
  tags: examples

- name: Create an application in development
  action: command oc login -u dev1 -p dev1
  tags: examples

- name: Create an application in development
  action: command oc project development
  tags: examples

- name: Create a Java application in development
  action: command oc new-app --template=1-eap64-ticket-monster-offline -l name=monapplicationjava
  tags: examples

- name: Create a PHP application in development
  action: command oc new-app --template=1-cakephp-offline
  tags: examples

- name: Create a NodeJS application in development
  action: command oc new-app --template=1-nodejs-offline-example
  tags: examples

#- name: Wait for imagestream to be available before tagging
#  wait_for: host=ose-utils.example.com port=80 delay=300
#  ignore_errors: yes
#  tags: examples

- name: Wait untils the Java app is deployed
  command: curl --head --silent http://eap-app-development.router.default.svc.cluster.local/
  register: result
  until: result.stdout.find("200 OK") != -1
  retries: 128
  delay: 20
  changed_when: false

# Next steps are done in the Jenkins Pipelines, uncomment if you want to do those during the install
#- name: Login as test1
#  action: command oc login -u test1 -p test1
#  tags: examples

#- name: Tag the image to promote.
#  action: command oc tag development/eap-app:latest testing/eap-app:latest
#  tags: examples

#- name: Go to project testing
#  action: command oc project testing
#  tags: examples

#- name: Create a project in testing using the tag
#  action: command oc new-app testing/eap-app:latest
#  tags: examples

#- name: Expose the testing application
#  action: command oc expose svc eap-app
#  tags: examples



